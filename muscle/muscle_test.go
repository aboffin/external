// Copyright Â©2012 Dan Kortschak <dan.kortschak@adelaide.edu.au>
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

package muscle

import (
	"bytes"
	check "launchpad.net/gocheck"
	"os/exec"
	"strings"
	"testing"
	"time"
)

// Tests
func Test(t *testing.T) { check.TestingT(t) }

type S struct{}

var _ = check.Suite(&S{})

func (s *S) SetUpSuite(c *check.C) {
	_, err := exec.LookPath("muscle")
	if err != nil {
		c.Skip("muscle not present")
	}
}

func (s *S) TestBuild(c *check.C) {
	_, err := Muscle{}.BuildCommand()
	c.Check(err, check.Equals, nil)
}

func (s *S) TestHours(c *check.C) {
	cmd, err := Muscle{MaxDuration: time.Hour * 2}.BuildCommand()
	c.Check(cmd.Args, check.DeepEquals, []string{"muscle", "-maxhours", "2"})
	c.Check(err, check.Equals, nil)
}

func (s *S) TestMuscle(c *check.C) {
	for _, t := range []struct {
		cmd          Muscle
		in, out, err string
	}{
		{
			cmd: Muscle{
				Quiet: true,
			},
			in: `>71.2259 lcl|scaffold_41:8288143+
CCCCAAATTCTCATAAAAAGACCAGACTTAATGGTCTGACTGAGACTAGAGGAATCCCGG
TGGTCATGGTCCCCAAACCTTCTGTTGGCCCAGGACAGGAACCATTCCCGAAGACAACTC
ATCAGACACGGAAGGGACTGGACAATGGGTAGGAGAGAGATGCTGACGAAGAGTGAGCTA
CTTGTATCAGGTGGACACTTGAGACTGTGTTGGCATCTCCTGTCTGGAGGGGAGATAGGA
GGGTAGAGAGGGTTAGAAACTGGCAAAATCGTCATGAAAGGAGGGACTGGAAGGAGGGAG
CGGGCTGACTCAGTAGGGGGAGAGTAAGTGGGAGTATGGAGTAAGGTGTATATAAGCTTA
TATGTGACAGATTGACTTGATTTGTAAACTTTCACTTAAAGCACAATAAAAATTATTTTT
TAAAAAATTGTTT
>71.2259 lcl|scaffold_41:11597466-
ATTATTATTTTTTTAAATAATTTTTATTGTGTTTTAAGGGAAAGTTTGCAAATCAAGTCA
GTCTCTCACATATAACCTTATATACACCTTACTCCATACTCCCATTTACTCTCCCCCTAA
TGAGTCAGCCCGCTCCCTCCTTCCGGTCTCTCCTTTCTTGACGATTTTGTCAGTTTCTAA
CCCTCTCTACCCTTCTATCTCTCCTCCAGACAGGAGATGCCAACACTGTCTCAAGTGTCC
ACTTGATACAAGTAGCTCACTCTTCGTCAGCATCTCTCTCCAACCCATTGTCCAGTCCCT
GCCATGTCTGATGAGTTGTCTTTGGGAATGGTTCCTGTCCTGGGCCAACAGAAGGTTTGG
GGACCATGACCGCTGGGATTCCTCTAGTCTCAGTCAGACCATTAAGTCTGGTCTTTTTAT
GAGA
>71.2259 lcl|scaffold_45:2724255+
ATAAAAAGACCAGACTTAATGGTCTGACTGAGACTAGAAGAATCCCGGTGGCCATGGTCC
CCAAACCTTCTGTTGGCCCAGGACAGGAACCATTCCCGAAGACAATTCATCAGACATGGA
AGGGACTGGACAATGGGTTGGAGAGAGATGCTGATAAAGAGTGAGCTACTTGTATCAGGT
GGACGTTTGAGACTGTATTGGCATCTCCTGTCTGGAGGGGAGATAGGGTAGAGAGGGTTA
GAAACTGGCAAAACGGTCACGAAAGGAGAGACTGGAAGAAGGGAGCAGGCTGACTCATTA
GGGGGAGAGTAAATGGGAGTATGTAGTAAGGTGTATATAAGCTTACATGTGACAGACTGA
CTTGATTTGTAAACTTTCACTTAAAGCACAATAAAAATTATTTTTTAAAAATTTGCC
`,
			out: `>71.2259 lcl|scaffold_41:11597466-
ATTATTATTTTTTTAAATAATTTTTATT--GTGTTTTAAGGGAAAGTTTGCAAATCAAGT
CAGTCTCTCACATATAACCTTATATACACC-----------TTACTCCATACTCCCATTT
ACTCTCCCC------------CTAATGAGTC--------------------AGCCCGCTC
CCTCCTTCCGGTCTCTCCTTTCTTGACGATTTTGTCAGTTTCTAACCCTCTCTACCCTTC
TATCTCTCCTCCAGACAGGAGAT-------------------------GCCAACACTGTC
TC--AAGTGTCCACTTGATACAAGTAGCTCACTCTTCGTCAGCATCTCTCTCCAACCCAT
T----GTCCAGTCCCTGCCA-TGTCTGATGAGTTGTCTTTGGGAATGGTTCCTGTCCTGG
GCCAACAGAAGGTTTGGGGACCATGACCGCTGGGATTCCTCTAGTCTCAGTCAGACCAT-
-TAAGTCTGGTCTTTTTATGAGA-----
>71.2259 lcl|scaffold_41:8288143+
CCCCAAATTCTCATAAAAAGACCAGACTTAATGGTCTGACTGAGACTAGAGGAATCCCGG
TGGTCATGGTCCCCAAACCTTCTGTTGGCCCAGGACAGGAACCATTCCCGAAGACAACTC
ATCAGACACGGAAGGGACTGGACAATGGGTAGGAGAGAGATGCTGACGAAGAGTGAGCTA
CTTGTATCAGG-----------TGGACACTTGAGACTGTGT----------------TGG
CATCTCCTGTCTGGAGGGGAGATAGGAGGGTAGAGAGGGTTAGAAACTGGCAAAATCGTC
ATGAAAGGAGGGACTGGAAGGAGGGAGCGGGCT--------------------GACTCAG
TAGGGGGAGAGTAAGTGGGAGTATGGAGTAAGGTGTATATAAG--------CTTATATGT
GACA--------------------GATTGACTTGATTTGTAAACTTTCACTTAAAGCACA
ATAAAAATTATTTTTTAAAAAATTGTTT
>71.2259 lcl|scaffold_45:2724255+
------------ATAAAAAGACCAGACTTAATGGTCTGACTGAGACTAGAAGAATCCCGG
TGGCCATGGTCCCCAAACCTTCTGTTGGCCCAGGACAGGAACCATTCCCGAAGACAATTC
ATCAGACATGGAAGGGACTGGACAATGGGTTGGAGAGAGATGCTGATAAAGAGTGAGCTA
CTTGTATCAGG-----------TGGACGTTTGAGACTGTAT----------------TGG
CATCTCCTGTCTGGAGGGGAGAT---AGGGTAGAGAGGGTTAGAAACTGGCAAAACGGTC
ACGAAAGGAGAGACTGGAAGAAGGGAGCAGGCT--------------------GACTCAT
TAGGGGGAGAGTAAATGGGAGTATGTAGTAAGGTGTATATAAG--------CTTACATGT
GACA--------------------GACTGACTTGATTTGTAAACTTTCACTTAAAGCACA
ATAAAAATTATTTTTTAAAAATTTGCC-
`,
			err: "",
		},
		{
			cmd: Muscle{
				Quiet:    true,
				FastaOut: "/dev/null",
			},
			in: `>71.2259 lcl|scaffold_41:8288143+
CCCCAAATTCTCATAAAAAGACCAGACTTAATGGTCTGACTGAGACTAGAGGAATCCCGG
TGGTCATGGTCCCCAAACCTTCTGTTGGCCCAGGACAGGAACCATTCCCGAAGACAACTC
ATCAGACACGGAAGGGACTGGACAATGGGTAGGAGAGAGATGCTGACGAAGAGTGAGCTA
CTTGTATCAGGTGGACACTTGAGACTGTGTTGGCATCTCCTGTCTGGAGGGGAGATAGGA
GGGTAGAGAGGGTTAGAAACTGGCAAAATCGTCATGAAAGGAGGGACTGGAAGGAGGGAG
CGGGCTGACTCAGTAGGGGGAGAGTAAGTGGGAGTATGGAGTAAGGTGTATATAAGCTTA
TATGTGACAGATTGACTTGATTTGTAAACTTTCACTTAAAGCACAATAAAAATTATTTTT
TAAAAAATTGTTT
>71.2259 lcl|scaffold_41:11597466-
ATTATTATTTTTTTAAATAATTTTTATTGTGTTTTAAGGGAAAGTTTGCAAATCAAGTCA
GTCTCTCACATATAACCTTATATACACCTTACTCCATACTCCCATTTACTCTCCCCCTAA
TGAGTCAGCCCGCTCCCTCCTTCCGGTCTCTCCTTTCTTGACGATTTTGTCAGTTTCTAA
CCCTCTCTACCCTTCTATCTCTCCTCCAGACAGGAGATGCCAACACTGTCTCAAGTGTCC
ACTTGATACAAGTAGCTCACTCTTCGTCAGCATCTCTCTCCAACCCATTGTCCAGTCCCT
GCCATGTCTGATGAGTTGTCTTTGGGAATGGTTCCTGTCCTGGGCCAACAGAAGGTTTGG
GGACCATGACCGCTGGGATTCCTCTAGTCTCAGTCAGACCATTAAGTCTGGTCTTTTTAT
GAGA
>71.2259 lcl|scaffold_45:2724255+
ATAAAAAGACCAGACTTAATGGTCTGACTGAGACTAGAAGAATCCCGGTGGCCATGGTCC
CCAAACCTTCTGTTGGCCCAGGACAGGAACCATTCCCGAAGACAATTCATCAGACATGGA
AGGGACTGGACAATGGGTTGGAGAGAGATGCTGATAAAGAGTGAGCTACTTGTATCAGGT
GGACGTTTGAGACTGTATTGGCATCTCCTGTCTGGAGGGGAGATAGGGTAGAGAGGGTTA
GAAACTGGCAAAACGGTCACGAAAGGAGAGACTGGAAGAAGGGAGCAGGCTGACTCATTA
GGGGGAGAGTAAATGGGAGTATGTAGTAAGGTGTATATAAGCTTACATGTGACAGACTGA
CTTGATTTGTAAACTTTCACTTAAAGCACAATAAAAATTATTTTTTAAAAATTTGCC
`,
			out: "", // Sent to /dev/null.
			err: "", // Checking muscle doesn't whine.
		},
	} {
		cmd, err := t.cmd.BuildCommand()
		c.Check(err, check.Equals, nil)
		cmd.Stdin = strings.NewReader(t.in)
		bOut := &bytes.Buffer{}
		bErr := &bytes.Buffer{}
		cmd.Stdout = bOut
		cmd.Stderr = bErr
		cmd.Run()
		c.Check(bOut.String(), check.Equals, t.out)
		c.Check(bErr.String(), check.Equals, t.err)
	}
}
